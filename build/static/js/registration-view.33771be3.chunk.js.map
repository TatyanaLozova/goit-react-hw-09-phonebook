{"version":3,"sources":["Components/Registration/Registration.js","views/RegistrationView.js"],"names":["styles","form","width","Registration","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","console","warn","style","Form","onSubmit","e","preventDefault","authOperations","register","Group","controlId","Label","Control","type","placeholder","onChange","Button","variant","RegistrationViev"],"mappings":"gNAOQA,EAAS,CACbC,KAAM,CACJC,MAAO,QAIE,SAASC,IACtB,IAAMC,EAAWC,cADoB,EAEbC,mBAAS,IAFI,mBAE9BC,EAF8B,KAExBC,EAFwB,OAGXF,mBAAS,IAHE,mBAG9BG,EAH8B,KAGvBC,EAHuB,OAILJ,mBAAS,IAJJ,mBAI9BK,EAJ8B,KAIpBC,EAJoB,KAO/BC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACHC,EAAQO,GACR,MACF,IAAK,QACHL,EAASK,GACT,MACF,IAAK,WACHH,EAAYG,GACZ,MACF,QAGEC,QAAQC,KAAK,kKAiBnB,OACE,qBAAKC,MAAOlB,EAAOC,KAAnB,SACA,eAACkB,EAAA,EAAD,CAAMC,SAda,SAAAC,GACnBA,EAAEC,iBAGFlB,EAASmB,IAAeC,SAAS,CAAEjB,OAAME,QAAOE,cAEhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAMZ,UACE,eAACO,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACP,EAAA,EAAKQ,MAAN,uBACA,cAACR,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLC,YAAY,kBACZvB,KAAK,OACLQ,MAAOR,EACPwB,SAAUlB,OAGd,eAACM,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACP,EAAA,EAAKQ,MAAN,4BACA,cAACR,EAAA,EAAKS,QAAN,CACEC,KAAK,QACLC,YAAY,cACZvB,KAAK,QACLQ,MAAON,EACPsB,SAAUlB,OAId,eAACM,EAAA,EAAKM,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACP,EAAA,EAAKQ,MAAN,uBACA,cAACR,EAAA,EAAKS,QAAN,CACEC,KAAK,WACLC,YAAY,WACZvB,KAAK,WACLQ,MAAOJ,EACPoB,SAAUlB,OAKd,cAACmB,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B,yBC5ESK,UARU,WACrB,OACI,mCACI,cAAC/B,EAAD","file":"static/js/registration-view.33771be3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch} from 'react-redux';\r\nimport { authOperations } from '../../redux/auth';\r\n\r\n// useState аналог handleChange и handleSubmit\r\n\r\n  const styles = {\r\n    form: {\r\n      width: \"200\",\r\n    }\r\n  };\r\n\r\nexport default function Registration() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n       \r\n        // eslint-disable-next-line no-template-curly-in-string\r\n        console.warn(\"Тип поля name - ${name} не обрабатывается\");\r\n    }\r\n\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n\r\n    dispatch(authOperations.register({ name, email, password }));\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n\r\n  };\r\n\r\n  return (\r\n    <div style={styles.form} >\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>UserName</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter your name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n\r\n        />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n  </Button>\r\n    </Form>\r\n</div>\r\n  );\r\n}\r\n\r\n\r\n\r\n// export class Registration extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     email: '',\r\n//     password: '',\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n//     this.props.myRegister(this.state);\r\n//     this.setState({ name: '', email: '', password: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, email, password } = this.state;\r\n//     const { handleChange } = this\r\n//     return (\r\n//       <Form onSubmit={this.handleSubmit}>\r\n//         <Form.Group controlId=\"formBasicEmail\">\r\n//           <Form.Label>UserName</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             name=\"name\"\r\n//             value={name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </Form.Group>\r\n//         <Form.Group controlId=\"formBasicEmail\">\r\n//           <Form.Label>Email address</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             placeholder=\"Enter email\"\r\n//             name=\"email\"\r\n//             value={email}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"formBasicPassword\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Password\"\r\n//             name=\"password\"\r\n//             value={password}\r\n//             onChange={handleChange}\r\n\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Button variant=\"primary\" type=\"submit\">\r\n//           Submit\r\n//   </Button>\r\n//       </Form>\r\n\r\n//     )\r\n//   }\r\n// }\r\n\r\n// // сокращенная запись mapDispatchToProps (пример Репеты)\r\n// const mapDispatchToProps = {\r\n//   myRegister: authOperations.register,\r\n// };\r\n// // сокращенная запись аналог вот этотому\r\n// // const mapDispatchToProps = (dispatch) => ({\r\n// //  myProps: (data) => dispatch(authOperations.register(data)),\r\n// // });\r\n\r\n// export default connect(null, mapDispatchToProps)(Registration);","import React from 'react'\r\nimport Registration from '../Components/Registration'\r\n\r\nconst RegistrationViev = () => {\r\n    return (\r\n        <>\r\n            <Registration />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegistrationViev;\r\n"],"sourceRoot":""}